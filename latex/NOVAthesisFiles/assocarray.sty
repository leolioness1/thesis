% !TeX encoding = UTF-8
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
\def\assocarrayname           {assocarray}                           %
\def\xstringversion              {0.01}                              %
%                                                                    %
\def\xstringdate              {2020/12/14}                           %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
% Author     : João Lourenço                                         %
% Status     : Maintained                                            %
% Maintainer : João Lourenço                                         %
% Email      : joao.lourenco@fct.unl.pt                              %
% Package URL:                                                       %
% Bug tracker: https://github.com/joaomlourenco/assocarray/issues    %
% Repository : https://github.com/joaomlourenco/assocarray           %
% Copyright  : João Lourenço 2020                                    %
% Licence    : Released under the LaTeX Project Public License v1.3c %
%              or later, see http://www.latex-project.org/lppl.txt   %
% Files      : 1) assocarray.sty                                     %
%              2) assocarray.tex                                     %
%              3) assocarray-example.tex                             %
%              4) README                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\NeedsTeXFormat{LaTeX2e}[1995/12/01]

\ProvidesPackage{assocarray}[\xstringdate\space v\xstringversion\space, Joao Lourenco, Provides an associative array]

\RequirePackage{etoolbox}
\RequirePackage{xstring}

\newif\ifopt@debug
\DeclareOption{debug}{\opt@debugtrue}
\ProcessOptions\relax

% \providecommand*\csnewcommand{\@star@or@long\csnew@command}
% \providecommand*\csnew@command[1]{\expandafter\new@command\csname#1\endcsname}
% \providecommand*\recsnewcommand{\@star@or@long\recsnew@command}
% \providecommand*\recsnew@command[1]{\expandafter\renew@command\csname#1\endcsname}


%================================================================
% FORLOOP
% \forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
%================================================================
\newcommand*{\@newcounter}[1]{%
  \ifcsname c@#1\endcsname\else\newcounter{#1}\fi%
}
\newif\ifforcontinue
\newcommand{\forbreak}{\forcontinuefalse}
\newcommand{\forloop}[3][1]{%
% \forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
    \@newcounter{#2}%
    \setcounter{#2}{#3}%
    \forcontinuetrue%
    % \typeout{M @forloop{#1}{#2}{\arabic{#2}}{#4}}%
    \@forloop@{#1}{#2}{#3}%
}%
\newcommand{\@forloop@}[4]{%
% \@forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
    % \typeout{L @forloop[#1]{#2}{\arabic{#2}}{#4}}%
    \ifnum#4\relax%
        \@firstofone%
        \addtocounter{#2}{#1}%
        \ifforcontinue%
          \@forloop@{#1}{#2}{\value{#2}}{#4}%
        \fi%
    \fi%
}%


%================================================================
% ASSOCARRAY
%================================================================
\def\ifaadefined#1(#2){%
  \ifcsdef{@aa@#1@#2}%
}
\def\ifaaempty#1(#2){%
  \ifcsvoid{@aa@#1@#2}%
}
\newcommand*{\assocarray}[1]{%
  \csdef{#1}(##1){%
    \@ifnextchar:{\expandafter\@aa@def@ii#1\expandafter(##1)}%
                 {\expandafter\@aa@use@ii#1\expandafter(##1)}%
  }%
  \newcounter{@aa@#1@cnt}%
  \setcounter{@aa@#1@cnt}{0}%
  % %% The following command is only for backward compatibility
  \csdef{the#1}(##1){\expandafter\@aa@use@ii#1\expandafter(##1)}%
  % \csdef{the#1}(##1){\csuse{@aa@#1@##1}}%
}

\def\@aa@def@ii#1(#2):{%
  % \typeout{@aa@star@ii{⟨name⟩}{⟨index⟩}}%
  % \typeout{AA def [#1][#2]}%
  \@ifnextchar={\@aa@assign@iii#1(#2):}{%
    \@ifnextchar>{\@aa@redir@iv#1(#2):}{%
      \errmsg{Invalid operator}%
    }%
  }%
}

\def\@aa@assign@iii#1(#2):=#3{%
  % \ifcsdef{@aa@#1@#2}%
  %   {reassign[#1(#2):=#3]\par}%
  %   {assign[#1(#2)$:=$#3]\par}%
  \csdef{@aa@#1@#2}{#3}%
}

\def\@aa@redir@iv#1(#2):>#3(#4){%
  % redir[#1(#2)$:>$#3(#4)]\par
  \stepcounter{@aa@#1@cnt}%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idx}{#2}%
  \StrCut{#2}{*}\@aa@cutL\@aa@cutR%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idxL}{\@aa@cutL}%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idxR}{\@aa@cutR}%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@Vkey}{\expanded{#3}}%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@Vidx}{\expanded{#4}}%
  \StrCut{#4}{*}\@aa@cutL\@aa@cutR%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@VidxL}{\@aa@cutL}%
  \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@VidxR}{\@aa@cutR}%
  % \par%
  % {------------------------------------------------}\par%
  % {AA R(\arabic{@aa@#1@cnt}) #1(#2)$:>$#3(#4)}\par%
  % {AA R(\arabic{@aa@#1@cnt}) L(#2)$:>$[\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@idxL}}]\par%
  % {AA R(\arabic{@aa@#1@cnt}) R(#2)$:>$[\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@idxR}}]\par%
  % {AA R(\arabic{@aa@#1@cnt}) L(#4)$:>$[\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@VidxL}}]\par%
  % {AA R(\arabic{@aa@#1@cnt}) R(#4)$:>$[\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@VidxR}}]\par%
  % {------------------------------------------------}\par%
}

% \newif\iffound%
\def\@aa@use@ii#1(#2){%
  % \foundfalse%
  \ifcsdef{@aa@#1@#2}{%
    \csuse{@aa@#1@#2}%
    % \foundtrue%
  }{%
    \ifcsname c@@aa@#1@cnt\endcsname%
      \ifnum\value{@aa@#1@cnt}>0\relax% There are redirections
        \forloop[-1]{@aa@redir@#1@cnt}{\arabic{@aa@#1@cnt}}{\value{@aa@redir@#1@cnt}>0}{%
          \IfStrEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}{}{%
            \edef\@aa@cutL{}%
            \edef\@aa@idxRest{#2}%
          }{%
            \StrCut{#2}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}\@aa@cutL\@aa@idxRest%
          }%
          \IfStrEq{\@aa@cutL}{}{%
            \IfStrEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}{}{%
              \edef\@aa@cutR{}%
            }{%
              \StrCut{\@aa@idxRest}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}\@aa@idxRest\@aa@cutR%
            }%
            \IfStrEq{\@aa@cutR}{}{%
              % $>$\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}%
              %      (\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
              %       \@aa@idxRest%
              %       \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR})
              \@aa@use@ii{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}}(%
                            \expanded{%
                                \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
                                \@aa@idxRest%
                                \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR}})%
              \forbreak%
            }{%
              % Failed right…
            }%
          }{%
            % Failed left…
          }%
        }%
      \fi%
    \fi%
  }%
  % \iffound
  % \else
  %   \textbf{ERR: #1[#2] undefined}
  % \fi
}

\endinput

% \newif\iffound%
\def\@aa@use@ii#1(#2){%
  % #1 = name
  % #2 = index
  % use[#1][#2]\par
  % \foundfalse
  % \typeout{AA use-[#1]-[#2]-}%
  \ifcsdef{@aa@#1@#2}{%
    % Direct use
    % \foundtrue%
    \csuse{@aa@#1@#2}%
  }{%
    \ifcsname c@@aa@#1@cnt\endcsname
      \ifnum\value{@aa@#1@cnt}>0\relax% There are redirections
        \forloop[-1]{@aa@redir@#1@cnt}{\arabic{@aa@#1@cnt}}{\value{@aa@redir@#1@cnt}>0}{%
          % R\arabic{@aa@redir@#1@cnt}
          \IfStrEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}{}{%
            \edef\@aa@cutL{}%
            \edef\@aa@idxRest{#2}%
          }{%
            \StrCut{#2}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}\@aa@cutL\@aa@idxRest%
          }%
          \IfStrEq{\@aa@cutL}{}{%
            \IfStrEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}{}{%
              \edef\@aa@cutR{}%
            }{%
              \StrCut{\@aa@idxRest}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}\@aa@idxRest\@aa@cutR%
            }%
            \IfStrEq{\@aa@cutR}{}{%
              % $>$\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}%
              %      (\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
              %       \@aa@idxRest%
              %       \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR})
              \@aa@use@ii{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}}(%
                            \expanded{%
                                \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
                                \@aa@idxRest%
                                \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR}})%
              \forbreak%
            }{%
              % Failed right…
            }%
          }{%
            % Failed left…
          }%
        }%
      \fi%
    \fi%
  }%
  % \iffound
  % \else
  %   \textbf{ERR: #1[#2] undefined}
  % \fi
}

\endinput
